{"version":3,"sources":["hooks/useLocalStorage.js","Contexts/BudgetContext.js","utils.js","components/BudgetCard.jsx","App.js","index.js"],"names":["useLocalStorage","key","defaultValue","useState","jsonValue","localStorage","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","BudgetContext","createContext","BudgetProvider","children","budgets","expenses","Provider","getBudgetExpenses","BudgetID","filter","expense","budgetID","addExpense","addBudget","deleteBudget","deleteExpense","currencyFormatter","Intl","NumberFormat","undefined","currency","style","minimunFractionDigits","BudgetCard","name","amount","max","defaultBg","Body","Card","Title","classNames","push","className","join","format","ProgressBar","variant","ratio","getProgressBarColor","min","now","Stack","direction","gap","Button","App","Container","display","gridTemplateColumns","alignItems","rootElement","document","getElementById","createRoot","render"],"mappings":"4JAwBeA,EAtBS,SAACC,EAAKC,GAC5B,IAaA,EAA0BC,oBAbL,WACnB,IAAMC,EAAYC,aAAaC,QAAQL,GAEvC,OAAkB,OAAdG,EACKG,KAAKC,MAAMJ,GAGQ,oBAAjBF,EACFA,IAEAA,KAGX,mBAAOO,EAAP,KAAcC,EAAd,KAKA,OAHAC,qBAAU,WACRN,aAAaO,QAAQX,EAAKM,KAAKM,UAAUJ,MACxC,CAACR,EAAKQ,IACF,CAACA,EAAOC,I,OClBXI,EAAgBC,0BAgCPC,MA1Bf,YAAuC,IAAbC,EAAY,EAAZA,SACxB,EAA8BjB,EAAgB,UAAW,IAAzD,mBAAOkB,EAAP,KACA,GADA,KACgClB,EAAgB,WAAY,KAA5D,mBAAOmB,EAAP,KAOA,OAPA,KAQE,cAACL,EAAcM,SAAf,CACEX,MAAO,CACLS,UACAC,WACAE,kBAXoB,SAACC,GAAD,OACxBH,EAASI,QAAO,SAACC,GAAD,OAAaA,EAAQC,WAAaH,MAW9CI,WAVa,aAWbC,UAVY,aAWZC,aAVe,aAWfC,cAVgB,cAEpB,SAWGZ,K,gEC9BMa,EAAoB,IAAIC,KAAKC,kBAAaC,EAAW,CAChEC,SAAU,MACVC,MAAO,WACPC,sBAAuB,IC8CVC,EA9CI,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,IAAKC,EAAgB,EAAhBA,UAC/BC,EAAgBC,IAAhBD,KAAME,EAAUD,IAAVC,MASRC,EAAa,GAOnB,OANIN,EAASC,EACXK,EAAWC,KAAK,YAAa,iBACpBL,GACTI,EAAWC,KAAK,YAIhB,cAACH,EAAA,EAAD,CAAMI,UAAWF,EAAWG,KAAK,KAAjC,SACE,eAACN,EAAD,CAAMK,UAAU,WAAhB,UACE,eAACH,EAAD,CAAOG,UAAU,qEAAjB,UACE,qBAAKA,UAAU,OAAf,SAAuBT,IACvB,sBAAKS,UAAU,8BAAf,UACGjB,EAAkBmB,OAAOV,GAC1B,uBAAMQ,UAAU,uBAAhB,UACG,IADH,KAEKjB,EAAkBmB,OAAOT,YAIlC,cAACU,EAAA,EAAD,CACEH,UAAU,eACVI,QA7BoB,SAACZ,EAAQC,GACnC,IAAMY,EAAQb,EAASC,EACvB,OAAIY,EAAQ,GAAY,UACpBA,EAAQ,IAAa,UAClB,SAyBQC,CAAoBd,EAAQC,GACrCc,IAAK,EACLd,IAAKA,EACLe,IAAKhB,IAEP,eAACiB,EAAA,EAAD,CAAOC,UAAU,aAAaC,IAAI,IAAIX,UAAU,OAAhD,UACE,cAACY,EAAA,EAAD,CAAQR,QAAQ,kBAAhB,yBACA,cAACQ,EAAA,EAAD,CAAQR,QAAQ,oBAAhB,oCCvCK,SAASS,IACtB,OACE,mCACE,eAACC,EAAA,EAAD,CAAWd,UAAU,eAArB,UACE,eAACS,EAAA,EAAD,CAAOC,UAAU,aAAaC,IAAI,IAAIX,UAAU,OAAhD,UACE,oBAAIA,UAAU,UAAd,qBACA,cAACY,EAAA,EAAD,CAAQR,QAAQ,UAAhB,wBACA,cAACQ,EAAA,EAAD,CAAQR,QAAQ,kBAAhB,4BAEF,qBACEhB,MAAO,CACL2B,QAAS,OACTC,oBAAqB,sCACrBL,IAAK,OACLM,WAAY,cALhB,SAQE,cAAC,EAAD,CACE1B,KAAK,eACLC,OAAQ,IACRC,IAAK,IACLC,WAAS,WClBrB,IAAMwB,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,EAAD,UACE,cAACT,EAAD,S","file":"static/js/main.ff64e0c2.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst useLocalStorage = (key, defaultValue) => {\r\n  const initialState = () => {\r\n    const jsonValue = localStorage.getItem(key);\r\n\r\n    if (jsonValue !== null) {\r\n      return JSON.parse(jsonValue);\r\n    }\r\n\r\n    if (typeof defaultValue === \"function\") {\r\n      return defaultValue();\r\n    } else {\r\n      return defaultValue;\r\n    }\r\n  };\r\n  const [value, setValue] = useState(initialState);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  }, [key, value]);\r\n  return [value, setValue];\r\n};\r\n\r\nexport default useLocalStorage;\r\n","import { createContext, useContext, useState } from \"react\";\r\nimport useLocalStorage from \"../hooks/useLocalStorage\";\r\n\r\nconst BudgetContext = createContext();\r\n\r\nexport const useBudget = () => {\r\n  return useContext(BudgetContext);\r\n};\r\n\r\nfunction BudgetProvider({ children }) {\r\n  const [budgets, setBudgets] = useLocalStorage(\"budgets\", []);\r\n  const [expenses, setExpenses] = useLocalStorage(\"expenses\", []);\r\n  const getBudgetExpenses = (BudgetID) =>\r\n    expenses.filter((expense) => expense.budgetID === BudgetID);\r\n  const addExpense = () => {};\r\n  const addBudget = () => {};\r\n  const deleteBudget = () => {};\r\n  const deleteExpense = () => {};\r\n  return (\r\n    <BudgetContext.Provider\r\n      value={{\r\n        budgets,\r\n        expenses,\r\n        getBudgetExpenses,\r\n        addExpense,\r\n        addBudget,\r\n        deleteBudget,\r\n        deleteExpense\r\n      }}\r\n    >\r\n      {children}\r\n    </BudgetContext.Provider>\r\n  );\r\n}\r\n\r\nexport default BudgetProvider;\r\n","export const currencyFormatter = new Intl.NumberFormat(undefined, {\r\n  currency: \"dop\",\r\n  style: \"currency\",\r\n  minimunFractionDigits: 0\r\n});\r\n","import { Button, Card, ProgressBar, Stack } from \"react-bootstrap\";\r\nimport { currencyFormatter } from \"../utils\";\r\n\r\nconst BudgetCard = ({ name, amount, max, defaultBg }) => {\r\n  const { Body, Title } = Card;\r\n\r\n  const getProgressBarColor = (amount, max) => {\r\n    const ratio = amount / max;\r\n    if (ratio < 0.5) return \"success\";\r\n    if (ratio < 0.75) return \"warning\";\r\n    return \"danger\";\r\n  };\r\n\r\n  const classNames = [];\r\n  if (amount > max) {\r\n    classNames.push(\"bg-danger\", \"bg-opacity-10\");\r\n  } else if (defaultBg) {\r\n    classNames.push(\"bg-light\");\r\n  }\r\n\r\n  return (\r\n    <Card className={classNames.join(\" \")}>\r\n      <Body className=\"w-4 px-4\">\r\n        <Title className=\"d-flex justify-content-between align-items-baseline fw-normal mb-3\">\r\n          <div className=\"me-2\">{name}</div>\r\n          <div className=\"d-flex align-items-baseline\">\r\n            {currencyFormatter.format(amount)}\r\n            <span className=\"text-muted fs-6 ms-1\">\r\n              {\" \"}\r\n              / {currencyFormatter.format(max)}\r\n            </span>\r\n          </div>\r\n        </Title>\r\n        <ProgressBar\r\n          className=\"rounded-pill\"\r\n          variant={getProgressBarColor(amount, max)}\r\n          min={0}\r\n          max={max}\r\n          now={amount}\r\n        />\r\n        <Stack direction=\"horizontal\" gap=\"2\" className=\"mt-4\">\r\n          <Button variant=\"outline-primary\">Add Expense</Button>\r\n          <Button variant=\"outline-secondary\">View Expenses</Button>\r\n        </Stack>\r\n      </Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default BudgetCard;\r\n","import { Button, Container, Stack } from \"react-bootstrap\";\nimport AddBudgetModal from \"./components/AddBudgetModal\";\nimport BudgetCard from \"./components/BudgetCard\";\nexport default function App() {\n  return (\n    <>\n      <Container className=\"my-3 mx-auto\">\n        <Stack direction=\"horizontal\" gap=\"2\" className=\"mb-4\">\n          <h1 className=\"me-auto\">Budgets</h1>\n          <Button variant=\"primary\">Add Budget</Button>\n          <Button variant=\"outline-primary\">Add Expense</Button>\n        </Stack>\n        <div\n          style={{\n            display: \"flex\",\n            gridTemplateColumns: \"repeat(auto-fill,minmax(300px,1fr))\",\n            gap: \"1rem\",\n            alignItems: \"flex-start\"\n          }}\n        >\n          <BudgetCard\n            name=\"Entertaiment\"\n            amount={100}\n            max={500}\n            defaultBg\n          ></BudgetCard>\n        </div>\n      </Container>\n      {/* <AddBudgetModal show={true}></AddBudgetModal> */}\n    </>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport BudgetsProvider from \"./Contexts/BudgetContext.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <BudgetsProvider>\n    <App />\n  </BudgetsProvider>\n);\n"],"sourceRoot":""}